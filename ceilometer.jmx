<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="THREADS" elementType="Argument">
            <stringProp name="Argument.name">THREADS</stringProp>
            <stringProp name="Argument.value">${__P(threads,3)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LOOPS" elementType="Argument">
            <stringProp name="Argument.name">LOOPS</stringProp>
            <stringProp name="Argument.value">${__P(loops,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RAMPUP" elementType="Argument">
            <stringProp name="Argument.name">RAMPUP</stringProp>
            <stringProp name="Argument.value">${__P(rampup,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LOOPS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMPUP}</stringProp>
        <longProp name="ThreadGroup.start_time">1462861325000</longProp>
        <longProp name="ThreadGroup.end_time">1462861325000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="rabbitmq_hosts" elementType="Argument">
              <stringProp name="Argument.name">rabbitmq_hosts</stringProp>
              <stringProp name="Argument.value">${__P(RABBITMQ_HOST,127.0.0.1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">rabbit mq server hosts</stringProp>
            </elementProp>
            <elementProp name="rabbitmq_user" elementType="Argument">
              <stringProp name="Argument.name">rabbitmq_user</stringProp>
              <stringProp name="Argument.value">${__P(RABBITMQ_USER,stackrabbit)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">rabbit mq user name</stringProp>
            </elementProp>
            <elementProp name="rabbitmq_pass" elementType="Argument">
              <stringProp name="Argument.name">rabbitmq_pass</stringProp>
              <stringProp name="Argument.value">${__P(RABBITMQ_PASS,123456)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">rabbit mq password</stringProp>
            </elementProp>
            <elementProp name="data_file" elementType="Argument">
              <stringProp name="Argument.name">data_file</stringProp>
              <stringProp name="Argument.value">${__P(DATA_FILE,data.csv)}</stringProp>
              <stringProp name="Argument.desc">csv file storing the traffic data</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">|</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">${data_file}</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">exchange,routingkey,payload</stringProp>
        </CSVDataSet>
        <hashTree/>
        <com.zeroclue.jmeter.protocol.amqp.AMQPPublisher guiclass="com.zeroclue.jmeter.protocol.amqp.gui.AMQPPublisherGui" testclass="com.zeroclue.jmeter.protocol.amqp.AMQPPublisher" testname="AMQP Publisher" enabled="true">
          <stringProp name="AMQPSampler.Exchange">${exchange}</stringProp>
          <boolProp name="AMQPSampler.ExchangeDurable">false</boolProp>
          <boolProp name="AMQPSampler.ExchangeRedeclare">false</boolProp>
          <stringProp name="AMQPSampler.Queue"></stringProp>
          <stringProp name="AMQPSampler.RoutingKey"></stringProp>
          <stringProp name="AMQPSampler.VirtualHost">/</stringProp>
          <stringProp name="AMQPSampler.MessageTTL"></stringProp>
          <stringProp name="AMQPSampler.MessageExpires"></stringProp>
          <stringProp name="AMQPSampler.ExchangeType">topic</stringProp>
          <stringProp name="AMQPSampler.QueueDurable">false</stringProp>
          <stringProp name="AMQPSampler.QueueExclusive">false</stringProp>
          <stringProp name="AMQPSampler.QueueAutoDelete">false</stringProp>
          <boolProp name="AMQPSampler.Redeclare">false</boolProp>
          <stringProp name="AMQPSampler.Timeout">1000</stringProp>
          <stringProp name="AMQPSampler.Iterations">1</stringProp>
          <stringProp name="AMQPSampler.Host">${rabbitmq_hosts}</stringProp>
          <stringProp name="AMQPSampler.Port">5672</stringProp>
          <stringProp name="AMQPSampler.Username">${rabbitmq_user}</stringProp>
          <stringProp name="AMQPSampler.Password">${rabbitmq_pass}</stringProp>
          <stringProp name="AMQPSampler.SSL">false</stringProp>
          <boolProp name="AMQPConsumer.Persistent">true</boolProp>
          <boolProp name="AMQPConsumer.UseTx">false</boolProp>
          <stringProp name="AMQPPublisher.MessageRoutingKey">${routingkey}</stringProp>
          <stringProp name="AMQPPublisher.Message">${payload}</stringProp>
          <stringProp name="AMQPPublisher.MessageType"></stringProp>
          <stringProp name="AMQPPublisher.ReplyToQueue"></stringProp>
          <stringProp name="AMQPPublisher.CorrelationId"></stringProp>
          <stringProp name="AMQPPublisher.ContentType">application/json</stringProp>
          <stringProp name="AMQPPublisher.MessageId"></stringProp>
          <elementProp name="AMQPPublisher.Headers" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="content_encoding" elementType="Argument">
                <stringProp name="Argument.name">content_encoding</stringProp>
                <stringProp name="Argument.value">utf-8</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="content_type" elementType="Argument">
                <stringProp name="Argument.name">content_type</stringProp>
                <stringProp name="Argument.value">application/json</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.zeroclue.jmeter.protocol.amqp.AMQPPublisher>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
